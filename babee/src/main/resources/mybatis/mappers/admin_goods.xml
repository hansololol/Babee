<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.babee.admin.goods.dao.AdminGoodsDAO">
<!-- 리절트 맵 정의 -->	
	<resultMap id="goodsResult" type="GoodsVO">
	    <result property="goods_id" column="goods_id" />
	    <result property="goods_title" column="goods_title" />
	    <result property="goods_price" column="goods_price" />
	    <result property="goods_stock" column="goods_stock" />
	    <result property="goods_delivery_price" column="goods_delivery_price" />
	    <result property="main_category" column="main_category" />
	    <result property="middle_category" column="middle_category" />
	    <result property="sub_category" column="sub_category" />
	    <result property="seller_id" column="seller_id" />
	    <result property="goods_image_name1" column="goods_image_name1" />
	    <result property="goods_image_name2" column="goods_image_name2" />
	    <result property="age_range" column="age_range" />
	    <result property="goods_creation_date" column="goods_creation_date" />
	    <result property="relative_tag1" column="relative_tag1" />
	    <result property="relative_tag2" column="relative_tag2" />
	    <result property="relative_tag3" column="relative_tag3" />
	    <result property="relative_tag4" column="relative_tag4" />
	    <result property="relative_tag5" column="relative_tag5" />
	    <result property="tag_option1" column="tag_option1" />
	    <result property="tag_option2" column="tag_option2" />
	    <result property="tag_option3" column="tag_option3" />
	    <result property="tag_option4" column="tag_option4" />
	    <result property="tag_option5" column="tag_option5" />
</resultMap>	

	<resultMap id="imageResult" type="ImageFileVO">
	   <result property="goods_id" column="goods_id" />
	   <result property="fileName" column="fileName" />
	   <result property="reg_id" column="reg_id" />
	   <result property="image_id" column="image_id" />
	   <result property="fileType" column="fileType" />
	</resultMap>
	
	<resultMap id="orderGoodsResult" type="OrderVO">
		<result property="order_id" column="order_id" />
		<result property="member_id" column="member_id" />
		<result property="goods_id" column="goods_id" />
		<result property="goods_title" column="goods_title" />
		<result property="goods_sales_price" column="goods_sales_price" />
		<result property="order_total_price" column="order_total_price" />
		<result property="order_goods_qty" column="order_goods_qty" />
		
		<result property="orderer_name" column="orderer_name" />
		<result property="receiver_name" column="receiver_name" />
		<result property="receiver_hp1" column="receiver_hp1" />
		<result property="receiver_hp2" column="receiver_hp2" />
		<result property="receiver_hp3" column="receiver_hp3" />
		
		<result property="receiver_tel1" column="receiver_tel1" />
		<result property="receiver_tel2" column="receiver_tel2" />
		<result property="receiver_tel3" column="receiver_tel3" />
		<result property="delivery_address" column="delivery_address" />
		<result property="delivery_message" column="delivery_message" />
		
		<result property="delivery_method" column="delivery_method" />
		<result property="gift_wrapping" column="gift_wrapping" />
		<result property="pay_method" column="pay_method" />
		<result property="card_com_name" column="card_com_name" />
		<result property="card_pay_month" column="card_pay_month" />
		
		<result property="pay_orderer_hp_num" column="pay_orderer_hp_num" />
		<result property="pay_order_time" column="pay_order_time" />
		<result property="delivery_state" column="delivery_state" />
		<result property="final_total_price" column="final_total_price" />
		<result property="goods_qty" column="goods_qty" />
		
		<result property="goods_fileName" column="goods_fileName" />
	</resultMap>
	
	
	<insert id="insertNewGoods" parameterType="java.util.Map">
	<selectKey resultType="String" keyProperty="goods_id" order="BEFORE">
	    	select ifnull(max(goods_id)+1,0) from t_shopping_goods
	    </selectKey>
    <![CDATA[
    insert into t_shopping_goods(
        goods_id,
        goods_title,
        goods_price,
        goods_stock,
        goods_delivery_price,
        main_category,
        middle_category,
        sub_category,
        seller_id,
        goods_image_name1,
        goods_image_name2,
        age_range,
        goods_creation_date,
        relative_tag1,
        relative_tag2,
        relative_tag3,
        relative_tag4,
        relative_tag5
    )
    values(
        #{goods_id},
        #{goods_title},
        #{goods_price},
        #{goods_stock},
        #{goods_delivery_price},
        #{main_category},
        #{middle_category},
        #{sub_category},
        #{seller_id},
        #{goods_image_name1},
        #{goods_image_name2},
        #{age_range},
        #{goods_creation_date},
        #{relative_tag1},
        #{relative_tag2},
        #{relative_tag3},
        #{relative_tag4},
        #{relative_tag5}
    )
]]>
</insert>
	
	<!-- 수정전코드
	<insert id="insertNewGoods" parameterType="java.util.Map"   >
		<selectKey resultType="String" keyProperty="goods_id" order="BEFORE">
	    	select ifnull(max(goods_id)+1,0) from t_shopping_goods
	    </selectKey>
	    
	    <![CDATA[
		   insert into t_shopping_goods(
		                goods_id, 
		                goods_sort,
                   		goods_title,
                   		goods_writer,
                    	goods_publisher,
										goods_price,
										goods_sales_price,
										goods_point,
										goods_published_date,
										goods_total_page,
										goods_isbn,
										goods_delivery_price,
										goods_delivery_date,
										goods_status,
										goods_writer_intro,
										goods_intro,
										goods_publisher_comment,
										goods_recommendation,
									
			              goods_contents_order,
			              goods_credate
			              )
					  			values(
					  			      #{goods_id},
					  			      #{goods_sort},
					  			      #{goods_title},
					  			      #{goods_writer},
					  			     
					  			      #{goods_publisher },
					  			      #{goods_price},
					  			      #{goods_sales_price},
					  			      #{goods_point},
					  			      #{goods_published_date},
					  			      
					  			      #{goods_total_page},
					  			      #{goods_isbn },
					  			      #{goods_delivery_price },
					  			      #{goods_delivery_date },
					  			      #{goods_status },
					  			      #{goods_writer_intro},
											
									      #{goods_intro},
					  			      #{goods_publisher_comment },
					  			      #{goods_recommendation },	
					  			      #{goods_contents_order:VARCHAR},
					  			      curdate()
					 			 )
		]]>
	</insert> 
	 -->
		<insert id="insertGoodsImageFile" parameterType="imageFileVO"   >
		<selectKey resultType="int" keyProperty="image_id" order="BEFORE">
	    	select ifnull(max(image_id)+1, 0) from t_goods_detail_image
	    </selectKey>
	    <![CDATA[
		   insert into t_goods_detail_image (image_id,
		                                     goods_id,
																				 fileName,
																				 fileType,
																				 reg_id)
											   					values(#{image_id},
											   					 			 #{goods_id},
											   							 	 #{fileName},
											   								 #{fileType},
											   								 #{reg_id} )
		]]>
	</insert> 
	<select id="selectNewGoodsList" resultMap="goodsResult"   parameterType="java.util.Map"  >
	    <![CDATA[
		  select * from (
			   select rowNum as recNum,
			   		  goods_id,
			          goods_title,
			          goods_writer,
			          goods_publisher,
			          goods_sales_price,
			          goods_creDate as goods_creDate,
			          goods_published_date as goods_published_date
			       from (
			             select  rowNum,
			             		 goods_id,
			             		 goods_title,
			             		 goods_writer,
			             		 goods_publisher,
			             		 goods_sales_price,
			             		 goods_creDate,
			             		 goods_published_date
			              from t_shopping_goods 
			                where goods_creDate between #{beginDate} and #{endDate}
			                ]]>
			                <if test="search_type=='goods_id'">
			                  AND goods_id=#{search_word}
			                </if>
			                 <if test="search_type=='all'">
			                  AND goods_id=#{search_word} ||  goods_title like CONCAT('%',#{search_word},'%') || goods_publisher like CONCAT('%',#{search_word},'%')
			                </if>
			                <if test="search_type=='goods_name'">
			                  AND goods_title like CONCAT('%',#{search_word},'%')
			                </if>
			                <if test="search_type=='goods_publisher'">
			                   AND goods_publisher like CONCAT('%',#{search_word},'%')
			                </if>
			               order by goods_creDate desc
					     )AS A
				)AS B		
			where				
		recNum between (#{section}-1)*100+ (#{pageNum}-1)*10+1 and (#{section}-1)*100+(#{pageNum})*10			        
    	
	</select>
	
	<select id="selectOrderGoodsList" resultMap="orderGoodsResult"   parameterType="java.util.Map"  >
		  select * from (
			    select rowNum as recNum,t.*
			       from (
			              select  *  from t_shopping_order 
			              where pay_order_time between #{beginDate} and #{endDate}
			                <if test="search_type=='orderer_id'">
			                  AND orderer_id=#{search_word}
			                </if>
			                <if test="search_type=='orderer_name'">
			                  AND orderer_name=#{search_word}
			                </if>
			                <if test="search_type=='orderer_hp_num'">
			                   AND pay_orderer_hp_num=#{search_word} 
			                </if>
			              order by PAY_ORDER_TIME desc
					    ) t
				)							
			where				
		recNum between (#{section}-1)*100+ (#{pageNum}-1)*10+1 and (#{section}-1)*100+(#{pageNum})*10				        
	</select>
	
 

	
	<select id="selectGoodsDetail" resultMap="goodsResult"   parameterType="String"  >
	    <![CDATA[
		     select g.*,g.goods_published_date as goods_published_date, d.fileName from t_shopping_goods g, t_goods_detail_image d
	        where g.goods_id=d.goods_id
	        and d.filetype='main_image'
	        and g.goods_id=#{goods_id}
	        order by g.goods_id
    	]]>
	</select>
	<select id="selectGoodsImageFileList" resultMap="imageResult"   parameterType="String"  >
	    <![CDATA[
		    	select * from  t_goods_detail_image 
		    	where  
			    goods_id=#{goods_id}
			    order by image_id asc
    	]]>
	</select>	
	
	
<update id="updateGoodsInfo" parameterType="java.util.HashMap" >
	   update t_shopping_goods
	    <set> 
	      <if test=" goods_sort!='' and goods_sort!=null">
	        goods_sort=#{goods_sort},
	      </if>
	      <if test=" goods_title!='' and goods_title!=null">
	        goods_title=#{goods_title},
	      </if>
	      <if test=" goods_writer!='' and goods_writer!=null">
	        goods_writer=#{goods_writer},
	      </if>
	      <if test=" goods_publisher!='' and goods_publisher!=null">
	        goods_publisher=#{goods_publisher},
	      </if>
	      <if test=" goods_price!='' and goods_price!=null">
	        goods_price=#{goods_price},
	      </if>
	      <if test=" goods_published_date!='' and goods_published_date!=null">
	        goods_published_date=#{goods_published_date},
	      </if>
	      <if test=" goods_sales_price!='' and goods_sales_price!=null">
	        goods_sales_price=#{goods_sales_price},
	      </if>
	      <if test=" goods_point!='' and goods_point!=null">
	        goods_point=#{goods_point},
	      </if>
	      <if test=" goods_page_total!='' and goods_page_total!=null">
	        goods_page_total=#{goods_page_total},
	      </if>
	      <if test=" goods_isbn!='' and goods_isbn!=null">
	        goods_isbn=#{goods_isbn},
	      </if>
	      <if test=" goods_delivery_price!='' and goods_delivery_price!=null">
	        goods_delivery_price=#{goods_delivery_price},
	      </if>
	      <if test=" goods_delivery_date!='' and goods_delivery_date!=null">
	        goods_delivery_date=#{goods_delivery_date},
	      </if>
	      <if test=" goods_status!='' and goods_status!=null">
	        goods_status=#{goods_status},
	      </if>
	      <if test=" goods_writer_intro!='' and goods_writer_intro!=null">
	        goods_writer_intro=#{goods_writer_intro},
	      </if>
	      <if test=" goods_intro!='' and goods_intro!=null">
	        goods_intro=#{goods_intro},
	      </if>
	      <if test=" publisher_comment!='' and publisher_comment!=null">
	        publisher_comment=#{publisher_comment},
	      </if>
	      <if test=" recommendation!='' and recommendation!=null">
	        recommendation=#{recommendation},
	      </if>
	      <if test=" goods_contents_order!='' and goods_contents_order!=null">
	        goods_contents_order=#{goods_contents_order:VARCHAR}
	      </if>
	     </set>
	    where 
	    goods_id=#{goods_id}
	
	</update>	
	<update id="updateGoodsImage" parameterType="imageFileVO">
		update t_goods_detail_image
		set fileName=#{fileName}
		where	 
		goods_id=#{goods_id} and image_id=#{image_id}
	</update>
	
	<delete id="deleteGoodsImage" parameterType="String">
	  delete from t_goods_detail_image
	  where image_id=#{image_id}
	</delete>
	
<update id="updateOrderGoods" parameterType="java.util.HashMap" >
	   update t_shopping_order
	    <set> 
	      <if test=" delivery_state!='' and delivery_state!=null">
	        delivery_state=#{delivery_state},
	      </if>
	      <if test=" delivery_address!='' and delivery_address!=null">
	        delivery_address=#{delivery_address},
	      </if>
	    </set>
	    where 
	    order_id=#{order_id}
	
	</update>		
</mapper>

